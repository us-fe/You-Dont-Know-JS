import{_ as n,d as s}from"./app.a957722f.js";const a={},p=s(`<h1 id="you-don-t-know-js-yet-get-started-2nd-edition" tabindex="-1"><a class="header-anchor" href="#you-don-t-know-js-yet-get-started-2nd-edition" aria-hidden="true">#</a> You Don&#39;t Know JS Yet: Get Started - 2nd Edition</h1><h1 id="appendix-b-practice-practice-practice" tabindex="-1"><a class="header-anchor" href="#appendix-b-practice-practice-practice" aria-hidden="true">#</a> Appendix B: Practice, Practice, Practice!</h1><p>In this appendix, we&#39;ll explore some exercises and their suggested solutions. These are just to <em>get you started</em> with practice over the concepts from the book.</p><h2 id="practicing-comparisons" tabindex="-1"><a class="header-anchor" href="#practicing-comparisons" aria-hidden="true">#</a> Practicing Comparisons</h2><p>Let&#39;s practice working with value types and comparisons (Chapter 4, Pillar 3) where coercion will need to be involved.</p><p><code>scheduleMeeting(..)</code> should take a start time (in 24-hour format as a string &quot;hh:mm&quot;) and a meeting duration (number of minutes). It should return <code>true</code> if the meeting falls entirely within the work day (according to the times specified in <code>dayStart</code> and <code>dayEnd</code>); return <code>false</code> if the meeting violates the work day bounds.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dayStart <span class="token operator">=</span> <span class="token string">&quot;07:30&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dayEnd <span class="token operator">=</span> <span class="token string">&quot;17:45&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token parameter">startTime<span class="token punctuation">,</span>durationMinutes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ..TODO..</span>
<span class="token punctuation">}</span>

<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;7:00&quot;</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;07:15&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;7:30&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;11:30&quot;</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;17:00&quot;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;17:30&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;18:00&quot;</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>Try to solve this yourself first. Consider the usage of equality and relational comparison operators, and how coercion impacts this code. Once you have code that works, <em>compare</em> your solution(s) to the code in &quot;Suggested Solutions&quot; at the end of this appendix.</p><h2 id="practicing-closure" tabindex="-1"><a class="header-anchor" href="#practicing-closure" aria-hidden="true">#</a> Practicing Closure</h2><p>Now let&#39;s practice with closure (Chapter 4, Pillar 1).</p><p>The <code>range(..)</code> function takes a number as its first argument, representing the first number in a desired range of numbers. The second argument is also a number representing the end of the desired range (inclusive). If the second argument is omitted, then another function should be returned that expects that argument.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span>end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ..TODO..</span>
<span class="token punctuation">}</span>

<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [3]</span>
<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [3,4,5,6,7,8]</span>
<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// []</span>

<span class="token keyword">var</span> start3 <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> start4 <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [3]</span>
<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [3,4,5,6,7,8]</span>
<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// []</span>

<span class="token function">start4</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [4,5,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>Try to solve this yourself first.</p><p>Once you have code that works, <em>compare</em> your solution(s) to the code in &quot;Suggested Solutions&quot; at the end of this appendix.</p><h2 id="practicing-prototypes" tabindex="-1"><a class="header-anchor" href="#practicing-prototypes" aria-hidden="true">#</a> Practicing Prototypes</h2><p>Finally, let&#39;s work on <code>this</code> and objects linked via prototype (Chapter 4, Pillar 2).</p><p>Define a slot machine with three reels that can individually <code>spin()</code>, and then <code>display()</code> the current contents of all the reels.</p><p>The basic behavior of a single reel is defined in the <code>reel</code> object below. But the slot machine needs individual reels\u2014objects that delegate to <code>reel</code>, and which each have a <code>position</code> property.</p><p>A reel only <em>knows how</em> to <code>display()</code> its current slot symbol, but a slot machine typically shows three symbols per reel: the current slot (<code>position</code>), one slot above (<code>position - 1</code>), and one slot below (<code>position + 1</code>). So displaying the slot machine should end up displaying a 3 x 3 grid of slot symbols.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">randMax</span><span class="token punctuation">(</span><span class="token parameter">max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">1E9</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> reel <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">symbols</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;\u2660&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2665&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2666&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2663&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u263A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2605&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u263E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2600&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token function">randMax</span><span class="token punctuation">(</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">(</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token function">randMax</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token function">randMax</span><span class="token punctuation">(</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> slotMachine <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">reels</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token comment">// this slot machine needs 3 separate reels</span>
        <span class="token comment">// hint: Object.create(..)</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reels<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">spinReel</span><span class="token punctuation">(</span><span class="token parameter">reel</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            reel<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// TODO</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

slotMachine<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
slotMachine<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u263E | \u2600 | \u2605</span>
<span class="token comment">// \u2600 | \u2660 | \u263E</span>
<span class="token comment">// \u2660 | \u2665 | \u2600</span>

slotMachine<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
slotMachine<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u2666 | \u2660 | \u2663</span>
<span class="token comment">// \u2663 | \u2665 | \u263A</span>
<span class="token comment">// \u263A | \u2666 | \u2605</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>Try to solve this yourself first.</p><p>Hints:</p><ul><li><p>Use the <code>%</code> modulo operator for wrapping <code>position</code> as you access symbols circularly around a reel.</p></li><li><p>Use <code>Object.create(..)</code> to create an object and prototype-link it to another object. Once linked, delegation allows the objects to share <code>this</code> context during method invocation.</p></li><li><p>Instead of modifying the reel object directly to show each of the three positions, you can use another temporary object (<code>Object.create(..)</code> again) with its own <code>position</code>, to delegate from.</p></li></ul><p>Once you have code that works, <em>compare</em> your solution(s) to the code in &quot;Suggested Solutions&quot; at the end of this appendix.</p><h2 id="suggested-solutions" tabindex="-1"><a class="header-anchor" href="#suggested-solutions" aria-hidden="true">#</a> Suggested Solutions</h2><p>Keep in mind that these suggested solutions are just that: suggestions. There&#39;s many different ways to solve these practice exercises. Compare your approach to what you see here, and consider the pros and cons of each.</p><p>Suggested solution for &quot;Comparisons&quot; (Pillar 3) practice:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> dayStart <span class="token operator">=</span> <span class="token string">&quot;07:30&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> dayEnd <span class="token operator">=</span> <span class="token string">&quot;17:45&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token parameter">startTime<span class="token punctuation">,</span>durationMinutes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token punctuation">[</span> <span class="token punctuation">,</span> meetingStartHour<span class="token punctuation">,</span> meetingStartMinutes <span class="token punctuation">]</span> <span class="token operator">=</span>
        startTime<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(\\d{1,2}):(\\d{2})$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    durationMinutes <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>durationMinutes<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token keyword">typeof</span> meetingStartHour <span class="token operator">==</span> <span class="token string">&quot;string&quot;</span> <span class="token operator">&amp;&amp;</span>
        <span class="token keyword">typeof</span> meetingStartMinutes <span class="token operator">==</span> <span class="token string">&quot;string&quot;</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> durationHours <span class="token operator">=</span>
            Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>durationMinutes <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        durationMinutes <span class="token operator">=</span>
            durationMinutes <span class="token operator">-</span> <span class="token punctuation">(</span>durationHours <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> meetingEndHour <span class="token operator">=</span>
            <span class="token function">Number</span><span class="token punctuation">(</span>meetingStartHour<span class="token punctuation">)</span> <span class="token operator">+</span> durationHours<span class="token punctuation">;</span>
        <span class="token keyword">let</span> meetingEndMinutes <span class="token operator">=</span>
            <span class="token function">Number</span><span class="token punctuation">(</span>meetingStartMinutes<span class="token punctuation">)</span> <span class="token operator">+</span>
            durationMinutes<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>meetingEndMinutes <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            meetingEndHour <span class="token operator">=</span> meetingEndHour <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
            meetingEndMinutes <span class="token operator">=</span>
                meetingEndMinutes <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// re-compose fully-qualified time strings</span>
        <span class="token comment">// (to make comparison easier)</span>
        <span class="token keyword">let</span> meetingStart <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
            meetingStartHour<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
            meetingStartMinutes<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> meetingEnd <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
            <span class="token function">String</span><span class="token punctuation">(</span>meetingEndHour<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
            <span class="token function">String</span><span class="token punctuation">(</span>meetingEndMinutes<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

        <span class="token comment">// NOTE: since expressions are all strings,</span>
        <span class="token comment">// comparisons here are alphabetic, but it&#39;s</span>
        <span class="token comment">// safe here since they&#39;re fully qualified</span>
        <span class="token comment">// time strings (ie, &quot;07:15&quot; &lt; &quot;07:30&quot;)</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
            meetingStart <span class="token operator">&gt;=</span> dayStart <span class="token operator">&amp;&amp;</span>
            meetingEnd <span class="token operator">&lt;=</span> dayEnd
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;7:00&quot;</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;07:15&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;7:30&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;11:30&quot;</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;17:00&quot;</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// true</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;17:30&quot;</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
<span class="token function">scheduleMeeting</span><span class="token punctuation">(</span><span class="token string">&quot;18:00&quot;</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br></div></div><hr><p>Suggested solution for &quot;Closure&quot; (Pillar 1) practice:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span>end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    start <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">getEnd</span><span class="token punctuation">(</span><span class="token parameter">end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">getRange</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
        end <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">getRange</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// **********************</span>

    <span class="token keyword">function</span> <span class="token function">getRange</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span>end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [3]</span>
<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// [3,4,5,6,7,8]</span>
<span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// []</span>

<span class="token keyword">var</span> start3 <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> start4 <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [3]</span>
<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [3,4,5,6,7,8]</span>
<span class="token function">start3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// []</span>

<span class="token function">start4</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// [4,5,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><hr><p>Suggested solution for &quot;Prototypes&quot; (Pillar 2) practice:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">randMax</span><span class="token punctuation">(</span><span class="token parameter">max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">1E9</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> max<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> reel <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">symbols</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;\u2660&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2665&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2666&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2663&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u263A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2605&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u263E&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u2600&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token function">randMax</span><span class="token punctuation">(</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">(</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">+</span> <span class="token function">randMax</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token function">randMax</span><span class="token punctuation">(</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>symbols<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> slotMachine <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">reels</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>reel<span class="token punctuation">)</span><span class="token punctuation">,</span>
        Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>reel<span class="token punctuation">)</span><span class="token punctuation">,</span>
        Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>reel<span class="token punctuation">)</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reels<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">spinReel</span><span class="token punctuation">(</span><span class="token parameter">reel</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            reel<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// display all 3 lines on the slot machine</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>
            <span class="token keyword">let</span> linePos <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> linePos <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span> linePos<span class="token operator">++</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> line <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>reels<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
                <span class="token keyword">function</span> <span class="token function">getSlot</span><span class="token punctuation">(</span><span class="token parameter">reel</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">var</span> slot <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>reel<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    slot<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">(</span>
                        reel<span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length <span class="token operator">+</span>
                        reel<span class="token punctuation">.</span>position <span class="token operator">+</span>
                        linePos
                    <span class="token punctuation">)</span> <span class="token operator">%</span> reel<span class="token punctuation">.</span>symbols<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
                    <span class="token keyword">return</span> slot<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            lines<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>line<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; | &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> lines<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

slotMachine<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
slotMachine<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u263E | \u2600 | \u2605</span>
<span class="token comment">// \u2600 | \u2660 | \u263E</span>
<span class="token comment">// \u2660 | \u2665 | \u2600</span>

slotMachine<span class="token punctuation">.</span><span class="token function">spin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
slotMachine<span class="token punctuation">.</span><span class="token function">display</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u2666 | \u2660 | \u2663</span>
<span class="token comment">// \u2663 | \u2665 | \u263A</span>
<span class="token comment">// \u263A | \u2666 | \u2605</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p>That&#39;s it for this book. But now it&#39;s time to look for real projects to practice these ideas on. Just keep coding, because that&#39;s the best way to learn!</p>`,35);function t(e,o){return p}var u=n(a,[["render",t],["__file","apB.html.vue"]]);export{u as default};
