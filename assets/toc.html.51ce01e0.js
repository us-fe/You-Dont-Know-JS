import{_ as i,d as l}from"./app.a957722f.js";const e={},o=l('<h1 id="you-don-t-know-js-scope-closures" tabindex="-1"><a class="header-anchor" href="#you-don-t-know-js-scope-closures" aria-hidden="true">#</a> You Don&#39;t Know JS: Scope &amp; Closures</h1><h2 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents" aria-hidden="true">#</a> Table of Contents</h2><ul><li>Foreword</li><li>Preface</li><li>Chapter 1: What is Scope? <ul><li>Compiler Theory</li><li>Understanding Scope</li><li>Nested Scope</li><li>Errors</li></ul></li><li>Chapter 2: Lexical Scope <ul><li>Lex-time</li><li>Cheating Lexical</li></ul></li><li>Chapter 3: Function vs. Block Scope <ul><li>Scope From Functions</li><li>Hiding In Plain Scope</li><li>Functions As Scopes</li><li>Blocks As Scopes</li></ul></li><li>Chapter 4: Hoisting <ul><li>Chicken Or The Egg?</li><li>The Compiler Strikes Again</li><li>Functions First</li></ul></li><li>Chapter 5: Scope Closures <ul><li>Enlightenment</li><li>Nitty Gritty</li><li>Now I Can See</li><li>Loops + Closure</li><li>Modules</li></ul></li><li>Appendix A: Dynamic Scope</li><li>Appendix B: Polyfilling Block Scope</li><li>Appendix C: Lexical-this</li><li>Appendix D: Acknowledgments</li></ul>',3);function t(n,c){return o}var r=i(e,[["render",t],["__file","toc.html.vue"]]);export{r as default};
